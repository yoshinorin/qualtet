openapi: 3.1.0
info:
  title: Qualtet API
  version: v2.17.0
  description: |
    # Description
    This API documentation regarding OpenAPI specification. Generated by [ReDoc](https://github.com/Rebilly/ReDoc).

    # NOTE
    This document may contain content that is under development.

    # External Resources

    || URL |
    | --- | --- |
    | Website | https://yoshinorin.github.io/qualtet/docs/ |
    | Source Code | https://github.com/yoshinorin/qualte |
    | Response Examples | https://github.com/yoshinorin/qualtet-mock/tree/master/src/resources |

    # Common Headers

    ## Request Header
    | name | required | format | Explain |
    | --- | --- | --- | --- |
    | X-Request-Id | false | UUID4 | Logging for server side. If the client does not set this header, Qualtet generates it randomly. If the client sets this when requesting the server, Qualtet will return its value in the response header. |

    ## Response Header
    | name | format | Explain |
    | --- | --- | --- |
    | X-Request-Id | UUID4 | Always set by Qualtet. If the client sets this when requesting the server, Qualtet will return its value in the response header. |
    | X-Response-Time | number | Always set by Qualtet. Indicates the response time in milliseconds (ms). |

    # Error Resonses

    Error responses follow [RFC7807: Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807). An example is provided below.

    ```json
    {
      "type": "https://yoshinorin.github.io/qualtet/rest-api/",
      "title": "Not Found",
      "status": 404,
      "detail": "Not Found",
      "instance": "/contents/not-exists"
    }
    ```
servers:
  - url: http://example.com/
paths:
  /status:
    $ref: './paths/status.yml'
  /v1/system/health:
    $ref: './paths/v1/health.yml'
  /v1/system/metadata:
    $ref: './paths/v1/metadata.yml'
  /v1/token:
    $ref: './paths/v1/token.yml'
  /v1/archives:
    $ref: './paths/v1/archives.yml'
  /v1/articles:
    $ref: './paths/v1/articles.yml'
  /v1/authors:
    $ref: './paths/v1/authors.yml'
  /v1/authors/{authorName}:
    $ref: './paths/v1/author.yml'
  /v1/contents/{contentPath}:
    $ref: './paths/v1/contents/getByPath.yml'
  /v1/contents:
    $ref: './paths/v1/contents/upsert.yml'
  /v1/contents/{contentId}:
    $ref: './paths/v1/contents/deleteById.yml'
  /v1/tags:
    $ref: './paths/v1/tags/get.yml'
  /v1/tags/{tagPath}:
    $ref: './paths/v1/tags/getByPath.yml'
  /v1/tags/{tagId}:
    $ref: './paths/v1/tags/deleteById.yml'
  /v1/content-types/:
    $ref: './paths/v1/contentTypes.yml'
  /v1/content-type/{contentTypeName}:
    $ref: './paths/v1/contentType.yml'
  /v1/sitemaps:
    $ref: './paths/v1/sitemaps.yml'
  /v1/feeds/{feedName}:
    $ref: './paths/v1/feeds.yml'
  /v1/caches/:
    $ref: './paths/v1/caches.yml'
  /v1/search:
    $ref: './paths/v1/search.yml'
  /v1/series:
    $ref: './paths/v1/series/series.yml'
  /v1/series/{seriesName}:
    $ref: './paths/v1/series/byName.yml'
  /v1/series/{seriesId}:
    $ref: './paths/v1/series/deleteById.yml'
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
